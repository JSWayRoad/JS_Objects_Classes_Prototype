## Constructor, operator "new"  Функции

**основной целью конструкторов – удобное повторное создание однотипных объектов.**  
**!!! Проверка на вызов в режиме конструктора: new.target**    
JavaScript предоставляет функции-конструкторы для множества встроенных объектов языка: например, Date, Set и других, которые нам ещё предстоит изучить.

https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new  
https://learn.javascript.ru/constructor-new  
https://puzzleweb.ru/javascript/7_new.php  

Когда функция вызывается как new User(...), происходит следующее:  
Создаётся новый пустой объект, и он присваивается this.  
Выполняется код функции. Обычно он модифицирует this, добавляет туда новые свойства.  
Возвращается значение this.  

целью конструкторов – удобное повторное создание однотипных объектов.  

Обычно конструкторы ничего не возвращают явно. Их задача – записать все необходимое в this, который в итоге станет результатом.  
Но если return всё же есть, то применяется простое правило:  
При вызове return с объектом, будет возвращён объект, а не this.  
При вызове return с примитивным значением, примитивное значение будет отброшено.  
Другими словами, return с объектом возвращает объект, в любом другом случае конструктор вернёт this.


Когда функ вызывается после оператора new(такие вызовы наз вызовами-конструкторами),вып след действия:

создаётся новый объект  
производится связывние сконструированного объекта с [[Prototype]]  
сконструированный объект назначается в качестве связывания this для этого вызова функции  
если функция не возврщ свой альтернатиынй объект, вызов функции авт возвращает сконструированный объект.  


